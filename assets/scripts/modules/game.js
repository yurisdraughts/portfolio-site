class Square{static empty=null;static player="x";static program="circle";constructor(){this.value=Square.empty}isEmpty(){return this.value===Square.empty}}class Game{static winningCombinations=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];static playerMark=Square.player;static programMark=Square.program;constructor(){this.newGame()}newGame(){this.squares=new Array(9).fill().map(()=>new Square),this.inProgress=!0,this.playersTurn=!0,this.hardMode=null,this.winner=null,this.movesMade=0}makeMove(s,a){this.squares[s].value=a,this.movesMade++,this.playersTurn=!this.playersTurn,this.isGameOver()&&(this.inProgress=!1,this.winner=this.whoWon())}playersMove(s){this.squares[s].isEmpty()&&(this.makeMove(s,Square.player),this.inProgress)&&this.programsMove()}programsMoveHardMode(){var e,r=[[],[]];for(e of Game.winningCombinations){var t,i=[];let s=0,a=0;for(t of e)this.squares[t].isEmpty()&&i.push(t),this.squares[t].value===Square.player&&s++,this.squares[t].value===Square.program&&a++;(2===s||2===a?r[1]:r[0]).push(...i)}var s=0<r[1].length?1:0,a=Math.floor(Math.random()*r[s].length),s=r[s][a];this.makeMove(s,Square.program)}programsMoveLightMode(){var a=[];for(let s=0;s<this.squares.length;s++)this.squares[s].isEmpty()&&a.push(s);var s=Math.floor(Math.random()*a.length);this.makeMove(a[s],Square.program)}programsMove(){null===this.hardMode&&(this.hardMode=Math.random()<.75),this.hardMode?this.programsMoveHardMode():this.programsMoveLightMode()}isGameOver(){for(var s of Game.winningCombinations){if(this.squares[s[0]].value!==Square.empty&&this.squares[s[0]].value===this.squares[s[1]].value&&this.squares[s[0]].value===this.squares[s[2]].value)return!0;if(9<=this.movesMade)return!0}return!1}whoWon(){for(var s of Game.winningCombinations){if(this.squares[s[0]].value===Square.player&&this.squares[s[0]].value===this.squares[s[1]].value&&this.squares[s[0]].value===this.squares[s[2]].value)return Square.player;if(this.squares[s[0]].value===Square.program&&this.squares[s[0]].value===this.squares[s[1]].value&&this.squares[s[0]].value===this.squares[s[2]].value)return Square.program}}}export{Game};